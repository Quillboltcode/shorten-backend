services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shortener_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d shortener_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    networks:
      - app-network
    healthcheck:
      test: ["CMD","rabbitmq","status"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  shortener-service:
    build:
      context: .
      dockerfile: shortener-service/Dockerfile
    container_name: shortener-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/shortener_db
      RABBITMQ_URL: amqp://user:password@rabbitmq:5672
    networks:
      - app-network
    ports:
      - "8080:8080"
    volumes:
      - ./common:/app/common

  redirect-service:
    build:
      context: .
      dockerfile: redirect-service/Dockerfile
    container_name: redirect-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/shortener_db
      RABBITMQ_URL: amqp://user:password@rabbitmq:5672
      REDIS_URL: redis://redis:6379
    networks:
      - app-network
    ports:
      - "8081:8081"
    volumes:
    - ./common:/app/common
  
  user-service:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    container_name: user-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/shortener_db
      RABBITMQ_URL: amqp://user:password@rabbitmq:5672
    networks:
      - app-network
    ports:
      - "8082:8082"

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8500:8500"
    environment:
      - JWT_SECRET=your_secret_key_here
    depends_on:
      - shortener-service
      - redirect-service
    networks:
      - app-network
    
volumes:
  postgres_data:
networks:
  app-network:
    driver: bridge